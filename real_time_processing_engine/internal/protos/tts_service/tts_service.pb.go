// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: tts_service.proto

package tts_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	real_time_processing "revovoiceai/voice_gateway_layer/internal/protos/real_time_processing"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for Text-to-Speech synthesis
type TTSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextToSynthesize string `protobuf:"bytes,1,opt,name=text_to_synthesize,json=textToSynthesize,proto3" json:"text_to_synthesize,omitempty"` // The text to be converted to speech
	SessionId        string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                        // Session identifier for context
	VoiceConfigId    string `protobuf:"bytes,3,opt,name=voice_config_id,json=voiceConfigId,proto3" json:"voice_config_id,omitempty"`          // Optional: Identifier for a specific voice configuration
}

func (x *TTSRequest) Reset() {
	*x = TTSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tts_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTSRequest) ProtoMessage() {}

func (x *TTSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tts_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTSRequest.ProtoReflect.Descriptor instead.
func (*TTSRequest) Descriptor() ([]byte, []int) {
	return file_tts_service_proto_rawDescGZIP(), []int{0}
}

func (x *TTSRequest) GetTextToSynthesize() string {
	if x != nil {
		return x.TextToSynthesize
	}
	return ""
}

func (x *TTSRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TTSRequest) GetVoiceConfigId() string {
	if x != nil {
		return x.VoiceConfigId
	}
	return ""
}

// Response message from Text-to-Speech synthesis
type TTSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId     string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`             // Session identifier
	StatusMessage string `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"` // e.g., "Synthesis started", "Text received"
	// string audio_chunk_id = 3;    // Optional: Identifier for the first audio chunk or stream
	AudioData []byte `protobuf:"bytes,4,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"` // Optional: For returning small audio directly
	// string error_message = 5;     // Optional: If an error occurred
	AudioFormat real_time_processing.AudioFormat `protobuf:"varint,6,opt,name=audio_format,json=audioFormat,proto3,enum=real_time_processing.AudioFormat" json:"audio_format,omitempty"` // Format of the audio_data
}

func (x *TTSResponse) Reset() {
	*x = TTSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tts_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTSResponse) ProtoMessage() {}

func (x *TTSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tts_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTSResponse.ProtoReflect.Descriptor instead.
func (*TTSResponse) Descriptor() ([]byte, []int) {
	return file_tts_service_proto_rawDescGZIP(), []int{1}
}

func (x *TTSResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TTSResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *TTSResponse) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

func (x *TTSResponse) GetAudioFormat() real_time_processing.AudioFormat {
	if x != nil {
		return x.AudioFormat
	}
	return real_time_processing.AudioFormat(0)
}

var File_tts_service_proto protoreflect.FileDescriptor

var file_tts_service_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x74, 0x74, 0x73, 0x1a, 0x12, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x54, 0x54, 0x53,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x74, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0xb8, 0x01, 0x0a,
	0x0b, 0x54, 0x54, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x44, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x82, 0x01, 0x0a, 0x13, 0x54, 0x65, 0x78, 0x74,
	0x54, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6b, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x2b, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x74, 0x74, 0x73, 0x2e, 0x54, 0x54, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x74, 0x74, 0x73,
	0x2e, 0x54, 0x54, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3c, 0x5a, 0x3a,
	0x72, 0x65, 0x76, 0x6f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x61, 0x69, 0x2f, 0x72, 0x65, 0x61, 0x6c,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74,
	0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_tts_service_proto_rawDescOnce sync.Once
	file_tts_service_proto_rawDescData = file_tts_service_proto_rawDesc
)

func file_tts_service_proto_rawDescGZIP() []byte {
	file_tts_service_proto_rawDescOnce.Do(func() {
		file_tts_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tts_service_proto_rawDescData)
	})
	return file_tts_service_proto_rawDescData
}

var file_tts_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tts_service_proto_goTypes = []interface{}{
	(*TTSRequest)(nil),                    // 0: real_time_processing_engine.tts.TTSRequest
	(*TTSResponse)(nil),                   // 1: real_time_processing_engine.tts.TTSResponse
	(real_time_processing.AudioFormat)(0), // 2: real_time_processing.AudioFormat
}
var file_tts_service_proto_depIdxs = []int32{
	2, // 0: real_time_processing_engine.tts.TTSResponse.audio_format:type_name -> real_time_processing.AudioFormat
	0, // 1: real_time_processing_engine.tts.TextToSpeechService.SynthesizeText:input_type -> real_time_processing_engine.tts.TTSRequest
	1, // 2: real_time_processing_engine.tts.TextToSpeechService.SynthesizeText:output_type -> real_time_processing_engine.tts.TTSResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tts_service_proto_init() }
func file_tts_service_proto_init() {
	if File_tts_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tts_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tts_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tts_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tts_service_proto_goTypes,
		DependencyIndexes: file_tts_service_proto_depIdxs,
		MessageInfos:      file_tts_service_proto_msgTypes,
	}.Build()
	File_tts_service_proto = out.File
	file_tts_service_proto_rawDesc = nil
	file_tts_service_proto_goTypes = nil
	file_tts_service_proto_depIdxs = nil
}

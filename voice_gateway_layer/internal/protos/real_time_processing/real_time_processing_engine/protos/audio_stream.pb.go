// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: real_time_processing_engine/protos/audio_stream.proto

package real_time_processing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AudioFormat int32

const (
	AudioFormat_AUDIO_FORMAT_UNSPECIFIED AudioFormat = 0
	AudioFormat_PCMU                     AudioFormat = 1
	AudioFormat_PCMA                     AudioFormat = 2
	AudioFormat_OPUS                     AudioFormat = 3
	AudioFormat_LINEAR16                 AudioFormat = 4 // Raw PCM, typically 16-bit signed integer
)

// Enum value maps for AudioFormat.
var (
	AudioFormat_name = map[int32]string{
		0: "AUDIO_FORMAT_UNSPECIFIED",
		1: "PCMU",
		2: "PCMA",
		3: "OPUS",
		4: "LINEAR16",
	}
	AudioFormat_value = map[string]int32{
		"AUDIO_FORMAT_UNSPECIFIED": 0,
		"PCMU":                     1,
		"PCMA":                     2,
		"OPUS":                     3,
		"LINEAR16":                 4,
	}
)

func (x AudioFormat) Enum() *AudioFormat {
	p := new(AudioFormat)
	*p = x
	return p
}

func (x AudioFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_real_time_processing_engine_protos_audio_stream_proto_enumTypes[0].Descriptor()
}

func (AudioFormat) Type() protoreflect.EnumType {
	return &file_real_time_processing_engine_protos_audio_stream_proto_enumTypes[0]
}

func (x AudioFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AudioFormat.Descriptor instead.
func (AudioFormat) EnumDescriptor() ([]byte, []int) {
	return file_real_time_processing_engine_protos_audio_stream_proto_rawDescGZIP(), []int{0}
}

type AudioSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string      `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Timestamp      int64       `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp in milliseconds
	AudioFormat    AudioFormat `protobuf:"varint,3,opt,name=audio_format,json=audioFormat,proto3,enum=real_time_processing.AudioFormat" json:"audio_format,omitempty"`
	SequenceNumber uint32      `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Data           []byte      `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	IsFinal        bool        `protobuf:"varint,6,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
}

func (x *AudioSegment) Reset() {
	*x = AudioSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_real_time_processing_engine_protos_audio_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioSegment) ProtoMessage() {}

func (x *AudioSegment) ProtoReflect() protoreflect.Message {
	mi := &file_real_time_processing_engine_protos_audio_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioSegment.ProtoReflect.Descriptor instead.
func (*AudioSegment) Descriptor() ([]byte, []int) {
	return file_real_time_processing_engine_protos_audio_stream_proto_rawDescGZIP(), []int{0}
}

func (x *AudioSegment) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AudioSegment) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AudioSegment) GetAudioFormat() AudioFormat {
	if x != nil {
		return x.AudioFormat
	}
	return AudioFormat_AUDIO_FORMAT_UNSPECIFIED
}

func (x *AudioSegment) GetSequenceNumber() uint32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *AudioSegment) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AudioSegment) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type IngestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SequenceNumber uint32 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	StatusMessage  string `protobuf:"bytes,3,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"` // e.g., "Segment received"
}

func (x *IngestResponse) Reset() {
	*x = IngestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_real_time_processing_engine_protos_audio_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestResponse) ProtoMessage() {}

func (x *IngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_real_time_processing_engine_protos_audio_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestResponse.ProtoReflect.Descriptor instead.
func (*IngestResponse) Descriptor() ([]byte, []int) {
	return file_real_time_processing_engine_protos_audio_stream_proto_rawDescGZIP(), []int{1}
}

func (x *IngestResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *IngestResponse) GetSequenceNumber() uint32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *IngestResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

type TranscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SequenceNumber uint32  `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Transcript     string  `protobuf:"bytes,3,opt,name=transcript,proto3" json:"transcript,omitempty"`
	IsFinal        bool    `protobuf:"varint,4,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"` // Is this the final transcript for the segment/utterance
	Confidence     float32 `protobuf:"fixed32,5,opt,name=confidence,proto3" json:"confidence,omitempty"`
}

func (x *TranscriptionResponse) Reset() {
	*x = TranscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_real_time_processing_engine_protos_audio_stream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptionResponse) ProtoMessage() {}

func (x *TranscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_real_time_processing_engine_protos_audio_stream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptionResponse.ProtoReflect.Descriptor instead.
func (*TranscriptionResponse) Descriptor() ([]byte, []int) {
	return file_real_time_processing_engine_protos_audio_stream_proto_rawDescGZIP(), []int{2}
}

func (x *TranscriptionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TranscriptionResponse) GetSequenceNumber() uint32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *TranscriptionResponse) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *TranscriptionResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *TranscriptionResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

var File_real_time_processing_engine_protos_audio_stream_proto protoreflect.FileDescriptor

var file_real_time_processing_engine_protos_audio_stream_proto_rawDesc = []byte{
	0x0a, 0x35, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0xe9, 0x01,
	0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x44, 0x0a, 0x0c, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0x7f, 0x0a, 0x0e, 0x49, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x15, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2a, 0x57, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x43, 0x4d, 0x55, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x50, 0x43, 0x4d, 0x41, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x55, 0x53,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x45, 0x41, 0x52, 0x31, 0x36, 0x10, 0x04,
	0x32, 0x6e, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x12, 0x5e, 0x0a, 0x12, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x79, 0x0a, 0x0c, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x69, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x2b,
	0x2e, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x46, 0x5a, 0x44, 0x72,
	0x65, 0x76, 0x6f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x61, 0x69, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x72,
	0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_real_time_processing_engine_protos_audio_stream_proto_rawDescOnce sync.Once
	file_real_time_processing_engine_protos_audio_stream_proto_rawDescData = file_real_time_processing_engine_protos_audio_stream_proto_rawDesc
)

func file_real_time_processing_engine_protos_audio_stream_proto_rawDescGZIP() []byte {
	file_real_time_processing_engine_protos_audio_stream_proto_rawDescOnce.Do(func() {
		file_real_time_processing_engine_protos_audio_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_real_time_processing_engine_protos_audio_stream_proto_rawDescData)
	})
	return file_real_time_processing_engine_protos_audio_stream_proto_rawDescData
}

var file_real_time_processing_engine_protos_audio_stream_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_real_time_processing_engine_protos_audio_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_real_time_processing_engine_protos_audio_stream_proto_goTypes = []interface{}{
	(AudioFormat)(0),              // 0: real_time_processing.AudioFormat
	(*AudioSegment)(nil),          // 1: real_time_processing.AudioSegment
	(*IngestResponse)(nil),        // 2: real_time_processing.IngestResponse
	(*TranscriptionResponse)(nil), // 3: real_time_processing.TranscriptionResponse
}
var file_real_time_processing_engine_protos_audio_stream_proto_depIdxs = []int32{
	0, // 0: real_time_processing.AudioSegment.audio_format:type_name -> real_time_processing.AudioFormat
	1, // 1: real_time_processing.StreamIngest.IngestAudioSegment:input_type -> real_time_processing.AudioSegment
	1, // 2: real_time_processing.SpeechToText.TranscribeAudioSegment:input_type -> real_time_processing.AudioSegment
	2, // 3: real_time_processing.StreamIngest.IngestAudioSegment:output_type -> real_time_processing.IngestResponse
	3, // 4: real_time_processing.SpeechToText.TranscribeAudioSegment:output_type -> real_time_processing.TranscriptionResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_real_time_processing_engine_protos_audio_stream_proto_init() }
func file_real_time_processing_engine_protos_audio_stream_proto_init() {
	if File_real_time_processing_engine_protos_audio_stream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_real_time_processing_engine_protos_audio_stream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_real_time_processing_engine_protos_audio_stream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_real_time_processing_engine_protos_audio_stream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_real_time_processing_engine_protos_audio_stream_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_real_time_processing_engine_protos_audio_stream_proto_goTypes,
		DependencyIndexes: file_real_time_processing_engine_protos_audio_stream_proto_depIdxs,
		EnumInfos:         file_real_time_processing_engine_protos_audio_stream_proto_enumTypes,
		MessageInfos:      file_real_time_processing_engine_protos_audio_stream_proto_msgTypes,
	}.Build()
	File_real_time_processing_engine_protos_audio_stream_proto = out.File
	file_real_time_processing_engine_protos_audio_stream_proto_rawDesc = nil
	file_real_time_processing_engine_protos_audio_stream_proto_goTypes = nil
	file_real_time_processing_engine_protos_audio_stream_proto_depIdxs = nil
}
